package Day17;

import AoC2023.AdventTask;
import AoC2023.Day17.Task17B;
import org.junit.Assert;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

public class Task17BTest {

    private final AdventTask mockedTask = new Task17B();

    @Test
    public void firstTest() {
        // Arrange
        List<String> report = new ArrayList<>();
        report.add("2413432311323");
        report.add("3215453535623");
        report.add("3255245654254");
        report.add("3446585845452");
        report.add("4546657867536");
        report.add("1438598798454");
        report.add("4457876987766");
        report.add("3637877979653");
        report.add("4654967986887");
        report.add("4564679986453");
        report.add("1224686865563");
        report.add("2546548887735");
        report.add("4322674655533");

        // Act
        List<String> result = mockedTask.perform(report);

        // Assert
        Assert.assertNotNull(result);
        Assert.assertEquals(1, result.size());
        Assert.assertEquals("94", result.get(0));
    }

    @Test
    public void secondTest() {
        // Arrange
        List<String> report = new ArrayList<>();
        report.add("111111111111");
        report.add("999999999991");
        report.add("999999999991");
        report.add("999999999991");
        report.add("999999999991");

        // Act
        List<String> result = mockedTask.perform(report);

        // Assert
        Assert.assertNotNull(result);
        Assert.assertEquals(1, result.size());
        Assert.assertEquals("71", result.get(0));
    }

    @Test
    public void thirdTest() {
        // Arrange
        List<String> report = new ArrayList<>();
        report.add("444545255141453153543115556561643516151423532337412774414441721317213343733152621461673175544545524222563411416342322366541444535522233121243");
        report.add("421421524314443512253422332664241651364257561551214721455576166524431171274175317372653477517577241673232143224551263322452143223424442512133");
        report.add("122414233232324335126412114454165555522653265376763523457517545241435263374646313344726475377762477531444132653413635232615665445155454213553");
        report.add("332455512312546324345332555473633546763274324411136732624435351134216434447557632252283813256757466657515145361547526661445645563242522144443");
        report.add("224335242521162466612611166456214127351247551163328461657262845348263518622265376117142325337561446713741174634357715564164545325144434552541");
        report.add("421421524314443512253422332664241651364257561551214721455576166524431171274175317372653477517577241673232143224551263322452143223424442512133");

        // Act
        List<String> result = mockedTask.perform(report);

        // Assert
        Assert.assertNotNull(result);
        Assert.assertEquals(1, result.size());
        Assert.assertEquals("633", result.get(0));
    }

    @Test
    public void fourthTest() {
        // Arrange
        List<String> report = new ArrayList<>();
        report.add("444545255141453153543115556561643516151423532337412774414441721317213343733152621461673175544545524222563411416342322366541444535522233121243");
        report.add("421421524314443512253422332664241651364257561551214721455576166524431171274175317372653477517577241673232143224551263322452143223424442512133");
        report.add("122414233232324335126412114454165555522653265376763523457517545241435263374646313344726475377762477531444132653413635232615665445155454213553");
        report.add("433342425512533145514543263246344433265717575222411273572357122314777427242561745627716532655224672371451244145132241152215143132412111225315");
        report.add("112335155225545126251436514455563227144243745612415115466546727447475744536733441241464113572313235175243742551234644545146333661532122432111");
        report.add("455333521453515232233431516525346222351165422271276355726727772363125254626244724144664336776363437767462654311441536563635211242114453511243");
        report.add("522233125122466131234442443333374216624137736132361212111446747686624426364373514243652224422433716326443344723244656331312615351223143524255");
        report.add("144221134113365652322123146425441422351632667313645112315547122442677584866587352325583572477352677647436246151676634366442566246624524421422");
        report.add("332455512312546324345332555473633546763274324411136732624435351134216434447557632252283813256757466657515145361547526661445645563242522144443");
        report.add("224335242521162466612611166456214127351247551163328461657262845348263518622265376117142325337561446713741174634357715564164545325144434552541");

        // Act
        List<String> result = mockedTask.perform(report);

        // Assert
        Assert.assertNotNull(result);
        Assert.assertEquals(1, result.size());
        Assert.assertEquals("628", result.get(0));
    }
}
